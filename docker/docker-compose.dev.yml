services:
  db:
    image: postgres:17
    restart: unless-stopped
    env_file:
      - ../config/.env.dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    restart: unless-stopped
    ports:
      - "8869:8869"
    env_file:
      - ../config/.env.dev
    volumes:
      - ../Cargo.lock:/app/Cargo.lock
      - ../Cargo.toml:/app/Cargo.toml
      - ../diesel.toml:/app/diesel.toml
      - ../src:/app/src
      - ../migrations:/app/migrations
      - ../logs:/app/logs
      - cargo_cache:/usr/local/cargo
      - target_cache:/app/target
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        diesel migration run
        cargo install --path . --bin cli
        cargo watch -w src -w Cargo.toml -x run
      "

volumes:
  postgres_data_dev:
  cargo_cache:
  target_cache: